swagger: "2.0"
info:
  title: Argent Bank API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successful
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successful
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transaction:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get all transactions
      description: API pour récupérer toutes les transactions de l'utilisateur
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transactions récupérées avec succès
          schema:
            $ref: "#/definitions/TransactionsResponse"
        "401":
          description: Non autorisé - Le token est manquant ou invalide
        "404":
          description: Transactions non trouvées
        "500":
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Add a new transaction
      description: API pour ajouter une nouvelle transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Détails de la transaction à ajouter
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        "201":
          description: Transaction créée avec succès
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Champs invalides
        "401":
          description: Non autorisé - Le token est manquant ou invalide
        "500":
          description: Internal Server Error
  /user/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get one transaction
      description: API pour récupérer une transaction spécifique
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID de la transaction à récupérer
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction récupérée avec succès
          schema:
            $ref: "#/definitions/TransactionResponse"
        "401":
          description: Non autorisé - Le token est manquant ou invalide
        "404":
          description: Transaction non trouvée
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update a transaction
      description: API pour modifier une transaction spécifique
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID de la transaction à modifier
          required: true
          type: string
        - in: body
          name: body
          description: Informations mises à jour de la transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionUpdate"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction mise à jour avec succès
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Champs invalides
        "401":
          description: Non autorisé - Le token est manquant ou invalide
        "404":
          description: Transaction non trouvée
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete a transaction
      description: API pour supprimer une transaction spécifique
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID de la transaction à supprimer
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction supprimée avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "401":
          description: Non autorisé - Le token est manquant ou invalide
        "404":
          description: Transaction non trouvée
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
  Login:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      transactions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            amount:
              type: number
            date:
              type: string
              format: date-time
            description:
              type: string
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      transaction:
        type: object
        properties:
          id:
            type: string
          amount:
            type: number
          date:
            type: string
            format: date-time
          description:
            type: string
  Transaction:
    type: object
    properties:
      amount:
        type: number
        description: Montant de la transaction
      description:
        type: string
        description: Description de la transaction
  TransactionUpdate:
    type: object
    properties:
      amount:
        type: number
      description:
        type: string
